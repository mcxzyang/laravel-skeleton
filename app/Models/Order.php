<?php

namespace App\Models;

use App\Traits\FormatDate;
use EloquentFilter\Filterable;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Log;

class Order extends Model
{
    use FormatDate;
    use Filterable;

    protected $fillable = [
        'user_id', 'order_no', 'trade_order_no', 'pay_type', 'total', 'pay_at', 'user_address_id', 'address',
        'delivery_time', 'receiving_time', 'remark', 'status', 'company_id', 'after_status'
    ];

    protected $casts = [
        'address' => 'json',
        'pay_at' => 'datetime',
        'delivery_time' => 'datetime',
        'receiving_time' => 'datetime'
    ];

    protected $appends = [
        'status_text', 'status_color'
    ];

    public const STATUS_PENDING_PAT = 1;
    public const STATUS_PAID = 2;
    public const STATUS_DELIVERIED = 3;
    public const STATUS_FINISHED = 4;
    public const STATUS_CANCELED = 5;

    public static $statusMap = [
        self::STATUS_PENDING_PAT => '等待支付',
        self::STATUS_PAID => '待发货',
        self::STATUS_DELIVERIED => '待收货',
        self::STATUS_FINISHED => '已完成',
        self::STATUS_CANCELED => '已取消',
    ];

    public static $statusColorMap = [
        self::STATUS_PENDING_PAT => '',
        self::STATUS_PAID => 'cyan',
        self::STATUS_DELIVERIED => 'orange',
        self::STATUS_FINISHED => 'green',
        self::STATUS_CANCELED => 'arcoblue',
    ];

    public const PAY_TYPE_WEPAY = 1;
    public const PAY_TYPE_ALIPAY = 2;
    public const PAY_TYPE_SCORE = 3;

    public static $payTypeMap = [
        self::PAY_TYPE_WEPAY => '微信支付',
        self::PAY_TYPE_ALIPAY => '支付宝支付',
        self::PAY_TYPE_SCORE => '积分支付'
    ];

    public const ORDER_PREFIX = 'PO';

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        self::creating(function ($order) {
            if (is_null($order->order_no)) {
                $order->order_no = static::findAvailableNo();
                if (!$order->order_no) {
                    return false;
                }
            }
        });
    }

    public function getStatusTextAttribute()
    {
        if ($this->status !== null) {
            return self::$statusMap[$this->status];
        }
        return null;
    }

    public function getStatusColorAttribute()
    {
        if ($this->status) {
            return self::$statusColorMap[$this->status];
        }
        return null;
    }

    public static function findAvailableNo()
    {
        // 订单流水号前缀
        $prefix = date('YmdHis');
        // 随机生成 6 位的数字
        $no = self::ORDER_PREFIX . $prefix . str_pad(random_int(0, 999999), 6, '0', STR_PAD_LEFT);
        // 判断是否已经存在
        if (!static::query()->where('order_no', $no)->exists()) {
            return $no;
        }
        Log::warning(sprintf('find order no failed'));

        return false;
    }

    public function orderItems()
    {
        return $this->hasMany(OrderItem::class);
    }

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function orderItemRates()
    {
        return $this->hasMany(OrderItemRate::class);
    }
}
